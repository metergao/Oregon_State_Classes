%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: chaul_hw1_writeup.dvi
%%CreationDate: Mon Oct 27 22:02:25 2014
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMBX12 CMR10 CMTI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter chaul_hw1_writeup.dvi -o
%+ chaul_hw1_writeup.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.10.27:2202
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2D80B2772B05DA60F3DC15A815A6BAFEDC399C7956E75
3851CB3588E22936FBFB63A58300298B11C45D82385C083D07AF133BB1BC941A
FDD9F34D5E0B8087EF2A58C54D8AB7580EE3ED58AEB83B72CB9028F472ADBF11
05A77651F118824F6CD00209EFB60C1D32D46A78E8C8DCB8B0E742828E3B7D17
DF5200D68189C91FB8489CDEE8BC223C4281DDCA5F7DA80BD5C2D66A13AB49D2
3BBBA5D38653AAC7B813F29F450710ABE135CA3AE2ED2112731C8152ECE13039
132650336D906EC4B1E471C17C132E7A1B8DAA02A55E2DC4124A2929C3989106
57C35047F319DF546D864BA17C5A1F360D570FE860C5C364D00B68778B5BCC31
A6853DE483B1F456B72FAD584CA518CF445C5FAA7A8C67A1170A20528761B662
509A633D41B7E72C38A329709BDD1FA5BE56620D7AAE601820E96F7A877B7051
8182CAEB5281D414E23FB38D6EBEEC8DB51816A725184684D8F06F01AA928477
A5F77242CF1C618B2D559B69B4BE02B88DD6B11405E8E79A0D2A4241140A12C8
68E0A4837105AD2A14A1572C3ED9AA3FCEEA3CFAE71916E5BA85BAC346C5502C
6C3E62D42C6F377614A73057268A9A617CB5145F972C733CAA77C5A0BE88CCC8
3EDF0151FBDD12205356063D9A49A175E5893BB9C603A11848DD947831185752
EB313EA1A328A24FE0FCD095C971D284580CF0109B29DC5D52C14B0C0631269D
FD451AD00B9F1F19D6656CA1F3B02D2FCC4BD3C090B91428E12D3C9121466311
944D04CEBE9FA911D49DA1CB95402AFC56580DEC213CB40B73A3B7FF09E73505
AC7FF197025A0422D743EE3D675BFDCF52EC0ECB3E0E18AF3DDE90B04262A26D
094030D3255F7921A8230952200E5B0172187961CA745D982A95A61581F833F1
4E6FE81A48B563D73A4F129B20CA5D738E853741BF9C42917703D7DB070E5332
1DD443DB31272DE54F4F7BCFFC9CD76984A4B318231038D7868571A8840F11F0
8132091FBF2AD6946A4C98F4304EA416D95A975993E33D76D459E0807673BC14
5AB983636E43AECCB72C8ECB82A2FC0699FA1A2AC6CB513E385836F34858B16D
41127BDAE46CEFACA3BB4A45E8F204E6E096F16F1BE23DF32FCDB72FAED604C2
2536E1DC015C9F9ED66BF238ECD96C7E567969E4A862EE5306C8ED5153EEACCE
7B09576D15E068AFEF0C3524E4BAA314DBE38FEA343102B532CB15F1C043D4E4
571C034AE088A772715B7AA4721A2C081B02A333C799EF324DF583C9496D799F
BC97B026E8F940BEE902147399A2E816583A41A2D08D146A3F9C26DDAF9B06D3
4DB6386DB4AC6795FEBB5C7172C1020DE81CBCB670C533086BDA5573781595BD
68902A9B903943381C3B948A33AEFC0A94F6210331C326524130CBB02827B614
207A21CB9113432BDC38F9A4D836B7690841D9D979C7F3EEB2962CFF7EB2B793
DDA6AFAFDF3277CD7FE4F475AE0A061E7DDB8D9AB0360E890A8A12FCE8F82E05
C35E82EDDB30080AEA9D633C463D364C68D6503EA5AFE278C531EA776E55BAFB
B731A24FEE2C1385443D9AB65870DDD05E423AEA846A072B3F82F3D326325C4B
9E72599EBAD9E4B48E1598428FF288525881D57CC72ED1FB5222BC5C423C6F49
098637A7FE55D59A21195C0624A1B6DDFD69B4C9B47E75793888AF514154EF71
BB1C219ACF94C1A7389D455AEE11860235DB16520CAC707450447BF81A4A4CF2
BA5D9694DB2A0B336C706635C0D076C1AE5FA93AFBDD75D35E70BD555BE34F98
D33DF47DE570224142A24142E9B2700E77EE1EF392BBB379B07F3343F63EB9B3
15DD2971F8D4244FF663531D75931277823D871CD8CF5CB72D37957ACFFBEADB
19F50371273F5090AFE096765CD0B9C2C6DC27FE3C56AA1A5FE2D175726D14F1
0BAF74981F1E06B706C9958F7D20B54E8255F8BFD8B90852DC3ADAA1631A8A88
28DEFD87387EBF13012862CE9155F8F1D499B3CD35302139702A12369A25D083
1F137D4C50A1B867141086B0148E2888092B2E4F8E5B94F90E316E40A14866E6
5688E482D55B5490AAE089DAA44D07F4FE7FDD240B5CCBB9236F1A1067C9E070
DADF6B3D7A216B10CB95FD31369E02A0D38BC9162BF7433A6D7E38385EA937EA
7128782EB65797562FDF5B44B807729941C38311A63A41CAB7BF73F7E8D9CFCE
F92BBB8B308D364D9628FAB1752DB961C8F68106E6D614B89B545CC7CAEC6A8B
7EA37C496966C8A03B6C28109B03375544197368684336997829944A7F98A97D
EAE5E4D033399CE6438FFCE8F5A0C52395E90DAD021105C3CB50EA52E1301E39
47A7445E3485EA8A8E78924C50A95C6AA02A17C96C2E397232E6E60E146DDA20
4D67661BF76F1101293F6728590CACA9E96586AD172F81D210D0EAB0E7ECAE1A
F08B2241B25BE45CB8DA3DCED76ED2930238F24F02F2B6BB5D78646401516C84
6C999B8D4363D7A58DD6B29DC29E72BA29640369EF4A883CA89458F5268C71B9
1944B8A98DFDF4EED7B0B3104DDEEE42B17C2B58598327D5D67F16E895457508
E92E45D55CFE8A8EFFCF8CB5797C224E11A319B51AA658203BB25278C1346070
9FD1C89AD063013871DD974DDF3DC2F4446831AD185A30F3830C20ED386CADD6
79618C364CA58D0E1C1ECC8107A2C24C644E6015104DAE03571DDAA70A3CAE7A
6297A224F16FC777483D515940D5B78F8A4677F6951DBB7926309D32873FDF74
FC5A3329430F3FE8133FE1C6AFA90022C2A2D53AC9F69701CD8ABE5B675C0808
30335DB7D78CF71792D28506F4AD29EE0BF127252BA107B113FF94A949C08672
4AAC9CAF8BF5FAB9BEAB684FBE77FE2A37DC885A3D715C5B3A5083341B01DFF2
DE44483AC080BE98EFA39759EA1BEEEE604F9E56DD7AB9F0AFBCC079886E9A88
EC4AC57C272B7691C30B4DE1D543CD785711A84DF905186B56CEC830F0331E7B
C1433F171FE890B567C30FB9EFB58BA6B53CCAC96AC2B6038A4B448C9BABC04D
4833F7EF71D783571AF8878FA7F3895A20776734187138B82B9D8C015855D79B
41E38D272A725F31AEB4F092BB4B0DCB1F1379C04F4E877DCA18E5DAA8E84DE2
38EB65AAA3DC9902CBB280465488EBCADA357B42C3AB3A92172C4CA920E72913
5C4D270DB549B76B4F16074501CC9F985EB874F08C5DBF47C750BE7745BA46E2
947BA70B02CA8DE4E07875B599341E239893167FBB9B21ECD285AE9EE3A0BD35
8E42E4140D77F660C50EB6D97AE48D46E07E36A86CC76BFBF723FB44A9C8C520
751908288F73F325FE3A2AFC00B3A69B17DBDBB5F2CD6632AA21B8356CBAA069
BD4BADC15D2351964586D29A7E10EAFB50D81268773FD7FC4D28A0889B839D33
4BD2CEC1EDD591DA4D002D08C839E55E3B349B689105E92B0C49EE0C74FBC8E5
32AA69AB179F367F548D302789A2DFFFD4DE3D664AEA6A8C627048705CFF1D6C
81EF6DF6828D27C0F2828ADD6BC7A0E33A1F89C12891A64BF292F0DC98B91085
E24E1CA41B3E26AEED6917EB37E4F6F78ACD7A30670722DB9C7A1C75484FDA9D
D1867A7D8E377DDB0FDBC7FFFF6E5AE4C1174DB98187DFFD3C8AEF680AFAF967
E4E684DC1ADE212859CF23988209DECB65498F9F2AB52F9489CA88C7A2442F82
C86CE826FB770030F99D963367C14EA751A1A62E4C796554C87FC0E376DBF400
B69ED50C65F393710CF7FEE68D7E62322439F893AE080853F45D420B4A4A1E52
859DA65CA199548314112A8C619C58A2ADB0E563AE5D3E247DAAF08D9CCF89AA
415077426EDB0D77666069CE73AFF31BCCD959894255CB698411A17BFE751309
08593D17B9EF7DEF636C737D777651C4F5CE6DA1A61DF91F3EBD7E34164B6D86
4B8C0F3320D089BFAF2284F02BBE6ABF42C98577B38F3A99B1B488D931EB4A7B
8C0D321CB96675FD3FE569CBF1B9F97A31CC4024F1B313316314F9DE2B678374
F5314EEAE3EF32EDB08D1E421953E69CD806EA9B32DC622E785255DDEB0B57CD
A333B8357E8769D684F6E2FD1E290ECCCDEAC3CD64FD5755D69D60F230210B3F
1A34FC2AD6DB0FD9B8B6163A1435772D19014DD9EBB6E2D120C2DFBEA146ACD7
BD41A7162F84E5C22128CDCF819BC4BE01309FBEA680751E38FB00B57733AD27
A220FA9BEDA63E9DB0E0A453DBC1301A3160AA3A66BF8B28CC7A2EED62A6E016
21F1E0AF78BB9D88844059A5203AC07B103B852A65B03598771D276E004E54F2
0CF4120E5D9A84177A80DBDC1E3A3C93357E42738DFD65932121404210DF2C6E
B986B6D653A2951D50212D2A786193B157B382A55ECADFC9AF46195766D331A8
8349E44AA0549E0011E905DFFAEA25875CC7059776BAFB0015ACBDF17ECAAB0F
C17E8470BF3A608672FC206C68F903B8ACCD2DED890E099C8FAF886636188E33
3AB93754A12F11E2C3B5EFBA5647BA6EFD6D40D73BAAE04245F0EBEE6A1F247D
6147C3C69B9E25E21F2B1BDA6ADC871B81EC99C8083EE4059CA36C686755381F
D643FDBA739C2B0DE7FFFB332B0553A54E1262A16C825C1A004CB8795C44718C
8AB5490289C541AB60780560CCD28D9B7219A43F514C2DED0017EC38C643E2BA
8668D75F00FB2CDF799F8DF27CBCF753FB7ABA054191D9F1B00E62E7E066398A
6BC5E7B32CE919D88824D61ECC8B1B049537D1487F9D560B98E7085CDE5DAE02
E57978E0313346516EDA77A49BDDCCF2AEED56B2BF6824E7CA2121BB7EFD0828
7EEC6F9C2A6FD909330BD04B43FE7CFDA000DD49416D933F1A530F54FC3981D1
2341FFA7DE8FE8F27C11D88B070053AC9DE6813F28F5BF14A8E9844CDF9C141B
69D5C7C43892046CEBC71B4CD700812CFC76B2C9D05CD973DB1CA53AEC3BF82C
9B04F87CD86E8A3D946FB956C002FC0B9E8064D7699B185A6CB38A5C94360873
35FAADE0AA397548F0C51BBD266AF3969DCBAC3E375FE63903D124C175BD1FF4
F8811F3A4A6EE692E34BBD03F605784742CE696BEE113EA1E013DA8A9123DDC9
B10B1D60BD330D45708D22E3B2F105EB4EC92132A35DE83C929532E7659DF63F
7D759F1F088C7A154C1A5A138764B365529631CFFDFFC3FC790B7AA0A1850753
25391FA24FEAD8D7CC3A9C84F0B1AB6EDC17200E961B905B411CB2A0559B44C4
0567B6D190B011FC5A5E248DE48633463B3BBFA9F4D6D4AA20935A19177BDE14
AA212CEE0FB16234DE7DE88989DEC1302DD6C683D928727DE9E04681D36E7C68
7A7725DD3D89DDBC12E8ECF6E57E8FB18D454F41AF3A7DD62552F968314B83ED
FA8E60652A15A879551ECE8C59675F90902E9C0B6B071D6E7BD44D70C4B3268B
73CDFECB42788614E60156BFDBA3F0F7038564454908BBBAAF80CD7EF9A10742
2027F58BFCEB5466CCCB53EFF5DD8FDB66C370959E03966B28F498D106D5F6E9
ECDB2D2FF08F6E2FA31B3A832E696D8CC005C8C72CBB580A7CAB20C1DD988B1E
16B257501DFDDD33D46690330894F0BB3653A4163CB870069D9E894849007FB2
D026168B97244A764ADD96E0706A4794A489626DBD0ADCFA02ECC44A3D7B0139
D35ADA20F45C227083533CB500C9183BF58CEC17A96E6EC6D1486D9DA09CA109
18BF65C55E26EBFB6101209AFDE985B28A23055F14C4BBFFBC07871B99BBB01F
A571A4F23F0EE164C61EF30DE0EE9A7E6720D9108F42
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 65 /A put
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AED52B51C319F277F0FD789
C8D5F56EE75D274F2162F53AA09B150479161D8B2F5FDCEA0020FDC7A51E4AB0
041A3247EB7E667B2842D65A5E184D7383D4B7034808F6E4E32CEF72DFAD9C60
730CDB6C87A6D571108A5969895654C00A5F30A5F801DB459733371B4B292AD4
367DDC8671EC48E447C84A11C0CD332175E5278EA0678603F85C0F3013AEB1B2
AADDB2337DB914580A9547B6CDB7F4CCD34EAF4555F34F8023B15D44707987E8
E672F486552480FFE3D56EF1EC01FC6D89CDDD2FD96D9E404038CB57A8018789
80B52AFEE8453D49DBB6803FD753A9E426992ED6BC8BEFEEAD4C4AF347E2EB76
DAD278F1B2D6E1C9D951E71FA85A7BB3E266BF8C48AA5BE172DE470E2D0A48A0
F4411D92D2873AAB20A37726D21FA68BDDD5AAC6277648DCB5EAEDC4FD5A41F0
EE4CF5FA51F6628F9EEC6842B79E4DEF8F451489AD6EE4C6EC416F76550288F6
F0C340296E486184754F4B1526B30CDE23A07FFBB713BE8292C0EFBA5BE19E8F
421A7A868783E0C2A6B714FAEB9ACB2B836CD26883EB223C4A252260FB10E8AB
64248F21D8A37C5A1BC6950BAED415D2A30A613E130BF08E6D6E822D224A998D
B3394824C03E2B60F679A40E919088C7611B0ECBACFA9E24559424877BC92CC9
81DBD9A7804219D363B0105CACD5A384E2C9A83EA7AF1181B6D2A8159E53E7E0
EF2C49CD9E9C9C280FD14F71ED8BDD506700D7A0F80BCE62841430DE4AFAE5E7
EA49AAD93BEB6C2C18B54BA8BD1F9241BF926D6A12D12115C2F994E9EFF86E09
0C51106131DB902FC0E947BDDFBC1CF3B4A039771E6C7F33C1DFD2F6690F25FB
C07D7F20DBE2362632722028FB42420D2E375E47C44E1F7266DC260A8020F8A3
7FB00954D974467F8D71CB310BBB49E9FB250E2A90619F614FCEE691D2CAD26F
AF0EAD426D7F9E4A9B3DC411384E28E4EAAC6A53FD8166D800672FEBD568B906
4FC4FD5E6B95895BC97B921D7E1AD6088838F12E5795683F27D58BD92BA11327
A7AA360C3ACD0302CE6434C728190B2ED612DE9C20338C14F18731B696844B07
BF49D2F5BD0EBEE7E708D965E6F2897749AE2B16C2B961DC6669BFF206905630
5EBA63FA7E00D60D1037407E15B4AA2735E7C450686F947CBB49BE4054BA78A4
B31CA3466CE05D9647408606E16994E090DE8539B4CDFB91EDD0D16150A44735
7DE016523EA6E7ED668FA0D5576BEE785BF1460E3C57F71AEB45F65D1FB3DC77
943BEF4606526EAFFAA6B40C452F13D01A69F857946F09B7EFB355B8D93F5DAA
FE9FA2DAD6328A7F27BA5C3F9AEC3B848304348EA7D611F31EADC86F80FF4E40
2F9B08E10CCDBCBCC986BC0F8F61ECA58E19625EDF877970FFFE1E9D81504023
D78745C18BA15AD00E63760989B360843A3E1446731C42FA70EDF71A4CDE9DA2
E07F25524F44D812BCC6B9D1EB65969786E5B3A83E5314BC568D3B9D8501DC67
BCB877B61187F3B0AB7F81979EA696496AD173B3726988A1103872A83BE1C73D
CB6AD7F7375A3C7FAA8822EB6CF7F2D601CFB2AF590EFF20C86FDFB568D33078
C6DACFFC21F19437D814C24BB598B41F92B2FA1D38CD6E47F9B9EAA85607E6FE
9F09C94C1FCE239C784F0D31E14C7B88E5EF67B04EF2ECAC6FD3B816D1C09CF1
52FFDBF1C38E01365E603CE5BF0F6D54CBAA8E3D7400E22FBE447FD2186CEFF2
4C069172A8196008D95FBA55109E3B594C1A679167BC2D81E7111A1345058098
07F072E7490E04B7F1C1D723E9753257BB86C28C0D1CF4538D0B36FFAA5899C5
2CA6A85A98E8E62BC570F5AFF40B62722CBD7FDA1858EC66CE82A72F9A6DBCB3
25CAA8B1DFECAD83329E6E87A244272655668065B4A063449669787EB0EA9308
BD9428E8DF7515F944FEA7281BF618A9DDF5486D1A21752C6D37AEBAD92BB95D
C0D7DBBE94312439DB3A735638F029D6DEAA7B6BE529722950D9C43F92AA2A46
8BCFB15E59BA0518C46474AF77ABE31D280D01FB7D75274CAF782A9C26724D2F
5A3932EC555C66BD297F0D2B6BFA7B8FB28770673EC42494BFEE457E71D37F7F
FE261C9907AD4CC317B9D0FFEDB38CC238FC330BD355598C4DB26FD783198C19
3F96D9A9F1A3084A0125AB6FE4C8DC2E17B75C6C3B671D71F86632273C399A88
30F7ABC8073FD2E67B77D846FFE07ED8E5AF436A462062E694671B44857F3077
28527705DB60570C33B58AB31599F916A194FBA2657652BEF1ED21BE09444AFF
E5540A1DB157A273DE1A8758485FDBADAED902DF876D67FB0A06067CF441A137
7EAC28FD807B447D2C892CB299AF584E98B2BA5B42FC32107C86B61D8569B477
747AAED92596776237D080BFCE41557E693F039DB9045C05324BCF4DD4811403
7BDEA8C4EFE23CF877ED372D59CBC283B8D42CB6FDBE22A851708012F6B08490
ABFFF415A60354F29880A5FC8294EF054CA0704C9804ED4A3ACDDD152D1C7E4D
518BD42D6A6E32B473B06E0A0F048A0096C1E784620F35BA2929AE9723C53EEB
9CDD93BEB71806251FC23E78400E9ECA6EA926FA3C3F010F51540CA2D30E71CC
F9DD1DF98CB669ADB2A469F6316CA6A17C7A472BF96F6D14CBB7E23F3E4EE0B7
FC08DD62E567057BB77340601808CD394F39CDDB194238232E4E7B38FB9C56C2
05DBAD3C28379F7DF944F2DF667083659B07ED614AC705151CACE1F520810D3B
A4662B166EC85F4BC4D2400549EFE01B7E39B83BFFF20EECA561A00B637397FB
3BCD64A5AA7619D048B097471887F6CABBB4D0B904F7AEF47BB69DCB540DEB47
96999953DDF2D6C4FC027E9C5B2CF8170D5EA076E48CE2791139A7CC0C7CEA37
56B10D811E1EAF23922166946F7EF1FB5924D9788D0D32B0E793858FE14E9DD7
D9C253CF8917E567A35CCF828B60DACB372F000C0CDD35F0CEA0DF748BEE08D2
8286B06CF03945959E692AE668627A38844DE555A529624F8022460DE28D7D33
5B26B2582D097C341540C4874CE59DD043D544074C90845AF92E0F99FCB589C4
CD894AD0FE50DE7F60CFD41C208C1BE28482B2BF57FA1D17F1D2EB2741D83E33
600DDC6015502B80C13BA7CC81E589548242C9A27D5E677B9E02867153FBA445
99EE8CF1B682EE29AB2A881BC29588CA821FCDC82E3EBEA0332216E224C3ECD5
24A5F0A60CCBED6F90AC5822B46A82F20D4EF1252D7ADB5317FDE1A3E4616AA2
A7C0B241C7113499B5793814A1CF17CBB2F4E92370F1E46569C62E9CAD03BC1B
CC28E4DE316BAF4D6BB98A1644FB0C231951DB7C0E27F36DAED1488EDB126BF2
EC19762F2F5A2683F2FE921FBB80A7EC5C9668D7A8ED860BE5140D3B8A5D67CC
A052FE2C9A84CA8F363BF119EBDBDB167D53A619B3B63D2355A93CC2AE305254
F59A6AD079602294B9E8618AC9EA0CC95469ED3251DFD95F3A2CF0DA3E536F55
A5767E239DD49A7C7C36019E17761D74978AE6088859E686EB027A00BB298838
5FDE24E1E81219DE1E8EDAC0D32BDA6395037EA39477D4A47AA162A5EC264C59
F6007C858BCFD895A62C97C946CFC7E5EBC0466CF7DB80BE1194FA92D9BBB6C6
69F025842B61581143F04876403207D68DDF2C2FFF91DCF1373B4AB3C090A783
E0625E15CAF2C9C98FA88061A377BA9CDD197D8B5A302CF32FE037A2FE5B8620
1FFFB0692258EB03D60F2F0F8856C798CE72552DF730B45739B9B5C529CB33F6
163128D6421DD71518F23CA52145F97D5283DAB95D179FF202D3E5489D1DB9DB
3AC0F1D1466C30AABB0D799E92A5811A5A8F3AFC820056425241969441CD0E93
CDACFD1441166D77E866B1ABEE1D86B9E88DC0B516A43E26AD0CB3A76B604C64
C33C7C4E507236EA9877002E0AE64F4572B39A2C204CA58A9FE559510C6BD9A2
B75FB0C3D8AFF8A052F34989C3636BE54B3A04A8E3CA0ED7574DC2989A371846
948C2D5255F8B6EC6A455BE462FED48882E863A84BACCE230D97C4198B09579D
9B4AF451E6AB0AAB887F5DE60990A8980C1A18F2E8C49ECEA8F3A423FB91B839
A32214896D403D1A8F05989C2778C4E6581F3C69CBE9447FBF26AF52FF9043D6
11C45530A0725560C7FBDA9D3B8024BEFFAA12701E22106A9ECB6CA45F73EDD0
A13D2F2E6A68D6D26FDF96EDCF9EB84DADB477C77291489EEA760FA5A6D52711
5F669383D5F141660194FE1B1B0EE31703DC6015301B61F010CE25F4550237FB
1C736D8C2182C4E695070BCD8D2075383B31518EDFECBD0FB9EA5673208568F6
496DE263783F7930AC22F2D993D144C99E7E4783A78C84285D7F4F3E74455293
8403A2E297326A1384DFE5A40C2C1AAF872C84FA41E1F4A53E0A9DA4614EB41A
0E6BF0037C340B9E45BC1D5D0E95A3100DFC3A02F4E1DB5115F703F1D377CDDF
5499EEB460B2F52F534775B965EB84D75CC819F4E879EAB6D57407806F82E59A
8FEC0025CA9E9DB071115F024300AE96B283E877A880864AA97A796042DC37DB
790140892C18A026339CE7954DC28290223839C8FB7119EBE5267AD6F156372F
31E4FA7EC1D8B9337C268369EDB6AB57467CAC9630D5000C3B7414CE85D30F50
D6E441752869F95783295A4AF33BD0CE5DDAB086F7B3D9B3B191F95B7F94414F
B24B06EE506290D54148896A09E3AACA05BE78ED621F7ED3D79F0937AF5CECFC
38507BBC83BA868A2BE596164D52F3906381810D104186996C6F91D4DEA4D1AA
243CACF6C28C56B37D32B10EFE89A4C3AAF4859C96B096D2015E8B8F83342E9A
02929C306A460BD5A6A1FA03C7E59C9EB83F2B42871F948583047C1B70E35459
98A5FD34E2FAA42D59C842D4113E2B6669E60B198133976263FE45865BAD76A9
49AF4B81B3FAD734BD70C0F314F54C07CB1FA5D8650A983CD8D9E69FB3D3AB1D
EEF401EE90E82D6F7D9235EE52CD33F1CDBC4DEAFFEE4A577D4A1C99D43C4FEA
C01E9B2636663268D3090B84F7E1C1D4994D1C3E3EC75B08860F80B3922987ED
FF02ADEDBF442D422C26E7AE60046D083105981619550C4BEAF242B80D90E287
554E65635B726E62A7ADAC94B64BB2404D19E28D631A5BB29D025C869C80BCCC
290300A11A306962B189F6B2DEBE777D9BABAAC27BB5913995C9633077ED854F
DF9E83A9A262599E7D07BD3A55826E2E0823F27BDE9887474568328BA18B0A12
62384D0B0E355DCCCE2C33151F4D9F8CB50DC9A993463253A6921F0D4185714B
666FD7DE74F33A71734F70295B20A92FE153909E022598E3178101C4A46B341F
62186988CA1C40D32516FDC3E7CCE6A58A84516646754C6325E0E05EAE1101ED
ABFBD4E35559B63D7A53A644434B19616432638B08A48D1781A1781595DA7670
E336F432D869A92BC87FF14179345F9823A634108639597B4A087D3A3D290928
B3F4D80F5E14EDDC21219F192C256990108650536441366FB1113BFE6B7E7EA5
C5DBC23BB85F0D101000B9642CA0749A422F555F6423BE0592CB6C8E38312981
68E2D0A4EAE50B38C44B2F5C5730BF9EF5EA2D2448642B0875D444EC19185B5A
1C7C330F765CB72F853B4C7FA99F00EE6AAB01945372DFF673EBACD874C17A29
92EBC7453D99D98965E56796AE58DA5E34BDE22C09C4EAC796BCCA5B8C1B92CE
961D5BBB8DC42475ECF4B3508102A7196FAD905C686B7E93A31054B63E8B0865
A07C462B7FFE9382CC4C3249D4D4D7B2A4CF92F7A04318715EF78334030A5C2E
3ECC66394318CA55EED3AE48C80E6ED3D7B52F55CACDF2FCCBF3254E4952A4EF
48EC5DC2D9BEED48C391DEDF2F145E5413B57F7AB4FF2731B7D314B6D671CBB4
38ABD2FA97BBFE510A53576DA8197D6401A746C39970A1E29077442335A73613
73DF2E605FC0B8A576BEE1DD66E57C77FE25D44A71BD18CEC1CEE21987F95A31
63CEB177A084CD21AB066284BFBFC6BE07849358F98D03AF6C638CA4D82B0286
5139EDCC5DBFFD48CB00D55FF20E9869657AE7138FB9162AE19998321B7E92A5
18DF68CA34B5B40EF4512849119B46D26E306AE868E66288E08F1761A955978C
3F6D2675332F02AE6C69232363951D09C33FF501709DDB8EE0CF36C20A9C2E98
4F21AE72441EE162ED0318BF60F69149B488ABE46AEC7E3A66CE60F1B938C89B
5C3E7DFC1A381CE71EA63AC7D3E65593FC707536D2FB953BB12BEFB7F5CD71AD
5C67845355E75EF92C2F932FFE326A73B9C370686A8C6F0A69618E279AB1EF5F
BCA25315FF33D5B24577A5DB24D6A2EFD0832856F9FF6622D9688C4A5BBC9B1B
40B24FA275B6340A04237E5AFB6EBC113B90BC64DD6426E93B936EBB8D809BB4
08A9E32FCFAC2FC50E8493514FA77D599C74B12257935DA0C1D375AE1C297FE6
279921F85E40D36D5B8DE0627CC670BCB866F201BC28E7FC0758121E2D2FB56F
87F41389E7F332C1349C26E262C102A2CAE3ABD3E16D743B7ECC931541F7D0F2
BED6376D6E8C71581CE5D6E6C835E0CFCA6FBBFEA7034BF46D436EDEF3AAFD9E
8D445360AAC659F19D5878A17227921478F86CE4C7FFFC8985CDCC4F6309EAE6
076E0A505F5893CBBD389FFE11BE4322054F5810B737E13B03A97CB149AED27B
F8D5F7B22C8DA786D48B9E0BF24B1451591947C46587F33CE64FC01D36037B06
B84EC28B591FE3EF9549C44D154CECE0DED9AD181144145722EFCED262FDA059
E15303FBE6A19C79095AA63E6A410617C008797D49D8A0C0F56F05D7550BBFA8
87C1B7B5EAB11B675679845C85FF5510B1BF767BE4BF40A480F74B296F347002
8C44BB3E6ED6978A1D3EA3255593A1A4327D2B106D30902FDB3F81BDFB35C317
6F1131566467EC042A1A4D71A99179C3ABF5860C7B18DD043993F4EB5EBBE151
B92EF212D979B7B8210073E083FF6A059CD4BCB9040A32E40E2C56E3CF749214
95C8A6ACED753EA84FE036179004F4D24ADEB7316059DC0E23985C5CCADFC78B
696C7CA6BEF900B1D5BCB426A8680328B5097952973034D6EF0A02049E6CD437
7D4E802A7EA32BD7AD6D6DCE1925DF4FDAC847E6ACC9B4BFA1B32CCBE9902D61
E7606F9568F50256E4E9E600C63E538067ABA047475008438D1F98E9E7BC86A4
8119E015C199ACB7DFD095D09E20EDADFF5D170E7B0A280595637811FE29E78C
80293A3B0D523307C08AC4749BB86CD428F39C8653E2BE4CB91B72E8991FF4F0
7AE1422C47D0F23DB0F0F608F3AA32269D4FB4DEE11C5B4D261CD72D30C16BAC
9D5B6BDEA82FA5F1037BAFE7F02449C0C3A09AF7B15CC6102F97DD4F7D3A88DF
4EA9B7E880581441628C457A5479982281471D51DE950AA3417F1AFCA2CDE4EA
E7CF13009C02CDDECBC18B0B9F7BE3100FD12C06A0B352FAB6E6184D75464066
69D9F0D908864D35CD2E97A93ECD1D632C01A7C88DDA91BB5AB4637B391D3BD1
844B26C39D1A072E9627E92E90BE3DCD27D428C15199BDFA8415BB46CE95EE15
80B81B27DF731F8103A705948B2FDADC218F438E7E43EE18B550F418216020F2
EB20F878DCEE58381AE68C7DC847D9A171BD688CC8CA3F4905A6E515607C44BD
149D22747D754D56F5DCC357C5CCD9990628646041DCBEC81B92DC72F3B0C0CD
25E2DC4E01455D9AFE32B3C6B58C154778989EB8D531949469F45C151F8419DB
A911759D14F845B6DAFAD3B635A40B80439E35FC101E09C26CA44F973A736736
A6084B64D20C1558CC20923BFC2F8BCABAF9F6010BDAFBFAB3EF2AFD406ADA4E
F542F3D688D877BCC3297F74EAC64470893D6AE4C0F3C48F175C965464AC81C0
DF3F5342F4A0EA287F2BB1479618FFF12162866EFB4B5A7209B22A28458D9B38
FB9D6034E10CBA33090521101F737573ED724C58461A6A988109A8D5257477F6
24F1EFD85AA5B5BBC2C44F2E5298E550BC2AB82BFC372442A4A57DD24E7749C7
D157284D269B474BB9F86F4CDE5EB3BE9DF996C0CA37CBCDABB9FAE092FFEE34
7E2367BC3F0B5915057FC1BDF40D7797B15F9961F73CE8DF731263F91C21AA6A
5FAFD95B09D60BC1604AF0050C5583F179C34DA7DDDAB31DE8632C30561D0D48
DD90005FF859EF28F9A9680755A1853FABC8EBEEE43968A7127EDC357E2D7D1F
79253F52E9BD0D397124F7ABDB5D9261FCC569FD8AD22B5039896F6E5FCE1666
F4438803EE5D81CD96ECEF88E43184866A5A6D4F8200C4B9C866B58F38ACD767
D9DBE94ADEBB3174EB3BAC737C77EEDF81295F7D74A3FFF39C32E9B3395EAAAB
C4EC9360016B516E45301A5DE67F67AAFBE21145EC685149D29037D3B58CE5BA
7949D10D45027062430D938764C68FFEA00744F3D849B4349B5EC5AABB215B01
82A7B1F41A0CF741C9B6FDA6E182578B78ACD27B037890779E5F960CE1015F4A
C6EE7A75F8DFF71109A7489FF955DCE0CCD97F3D06AA45931BF86F5B93BB16F9
B811F33996C4648BF9EEB45370155739608B27C742A2D3FF15FB98F21D4C3221
7B4EB77AC288A8431954B826D0A1259048DFF489AAAD15B9EA69459A62A2BC0C
F8C2713F579595141EE852C4D8FB3E6C787E9F2AB6BDE4AD56471A3F35A5F54B
CF153CB79712BAFDF97DDC92A7F75F0AF0E52439E9C68A5CA395B4D9B1650705
A5FB8BF8D56B9F7BC4B9846DB338FF5D0FDA943C5DCEF88CE9B1AF9F67D69CBA
4ACC2482BAF962B9FF956022E424915B0B275EA474B08CD57C2BB92A8950494B
4FB6335669BAE00F79ED91BB21B10F6788267944BEAEA727FB0C5500FA3B9AF9
6C7DC1D8A7F3B71155222E33B67DA31EDC61C0C1DB4BBE40D2710A54B8BAE8BB
04F1A3A931F63E52B3E017D4C9DFE0B0A44A9C16BF8C0F54BBD4270796143AC9
63415BC648E6456B065273DA0A45D6C75BEC85309B40F17DC6809B1CDD2D595A
8ACD750307F7641FE5ACB5634CD952A95FEE28F33F768CA5F630DBE98812C216
A1008A10C66960B2D8A1772525BF322082D87A8B6C0F9BF1C3E8AFD56847E1F2
CCE9345FD795C942B85EBB12D3EDBB10378B2C9F4D99B21A0B35E96E465CE481
53E8D39F47DF052E35D71105AF17F9CF0B8C9074B96A0E9B6DDAC079E2C13167
24A668AB82566FA6E8E03A2080E49CB7D21B7C1FEDD1CC041EF8ECC3262F8FFA
1C11488A35BB431F106E93A1AF04AA39422F9E87DDD4AE7173C0F595D7585972
A2E78651A9D9C96E6DC2548969050046E22E7DE099B306D13C129C8B98819407
E4583A43A87381364035B50463DC6648222E0F935FF716CFA1A7ABCD6873850F
53AD60284C6A3B387ADE2C7B6C3D630A1BAAED29D51D30C75111B6D06D0625D3
D787D23C05FDD428DF73D9741C96B047E405982EF1E724D8CFA54B204710CABD
02582EAC60ABA50F7F62A27F7F5EA4BB081937410A55C1200577B6F0F5D7700A
745BB7AC6BB6BDF369607EFC7103098C8AEAE9E0B7615F067F2515F3FDA8C06C
65E27874DFC24827A5A879FF7BE21699069AF1F3C788771135E8D617A3A2CC23
B1D5C62F365F8DAC7DB0B67EB5D02E9E6C4DE2782A99EAED5A12ACC820DBD8EC
47709498F23C44BF4B9E3068F6E354C0D5CB102B23D8CAA7F4CC038723DC41D6
2FF53AEF473FD6FF21ABC9A1479F373503F32ACC21CC968C26F042D44AEC22A9
3637D454CABD0AEA6DE39765486416874618650072428181FA618A8A1677F7D6
8B61CE4E562088C9260EB1C8891FFC95D14B9AE1472AC4AB15AD03BEFE76E512
089FFD6A4C1DC18D8BFBDD45F5F68F31704A48EB54454FCB8EF1FDD96D4C5BF8
A93D1C2D7BC56780C8E8D8F5DA92D4D97D4C429D0F52D9FE8494172575BC4C7B
56B74337A9DAE58FEB2457176C14248B3D692D0C3B7150B9659A2AC1ED28539F
3FF3D99B634151FD13D60DCBAEF6F396CAC9CA185EF238C95D986B45C157733A
1DCD450BD716C935F1C4E62960B6B5C0D8EE9DD504BD2D77021AA703387E88EF
274D9636F9E014C29536F4F5C77AE1E4928D47CF1E623AEDC59254559559A2C5
EDAB2972A4F5BCB09A2AAB632C978559C8D8E3ED0F36EF79E6126F2125A5A9E8
72060E0565007338542831DBFF1CD58899C0565902AE354EE4F975C84B9139C6
CD1111F9A2C8D0161117BF23F559662C63F057DC272A6306F57B25DA42036806
8B62CCA7521286A1C2A793F452FA35B5398C3CAC66C2ACDE97F2D4B39E6C29CE
EDBB291EC6AEB636DF484247643FDEB63E62D3F16EA294FE5909BD76BE40A8D9
33519A0ED1DA71891EFB3C47D29FF12DB1E850BC5E8FCE592B0A06DB45DE5801
4D8348D972968A98D98B825BBB9031F5C5F238478A5B1505E79D72C5D51522E8
C2DD1E50EF22CFE4D428ADC3CABFDE5C9DBE93E286FB06A4E1BBA80530244985
7A06986CD83541330F526E473D3D4E822E3546E8DDC092F26B3EDE877D65F92C
2BEFC43926DF81F41486BDEDB9FA78F88DC3D9ED5652C21E1475FB21C43CAE40
A07891D2B5B302C531F91A16314E0EC9F14992A07C98592D55C0FB5F664600BB
54BDE299738C1E609D5E06BA76F909D7EABF996EED8BA8A83439938DE821F94C
AB50D7BE4ADB22A5312796B33D304A0DAB4D0A412132B8FFA78A037A63E00ABD
73E47FE26E0F1E3B3151775C80703C824C7025E1D13AB4F141F26373E7F34471
71DD9DC8CC3F3F81ECB275B2A000CE152C22C8ACDD88ACEFBECDC4BB04BF6D70
F9F9F70463B1F7747D02CED92B77E3D7EB5E3BAC9978867DEF601649B60EC763
4E7E6DC95EC8421C72AF057CF29F9A957A5848EC1C5F7F6C528A03B3F8AE7F17
64BE1138B20B691D52F1481D2EFE22034796B0F42348ABC7E81A67189C19EA89
831C6D36A2ACB2FD371711997DCF794B555B3F7E02E93444EF84CBCB19F5FACA
68390903A15F2AB3EEB492F784A9DE0A60AFD06688782A948A4911A59B93A99D
C15AF03EB4DDB17A48E1EB5302FD67A6D07600441D0C134CBAFE40DDB81B0DE4
3C988D2D537930972B927817FF79C352DE412752D17CDEF2B730401BB4EB7766
CD138068404ECC78CEFC3698C6D41092F02C6E67519E331CBF1286EAF04E2F15
F6AEFD0FB356C212351E74352A1C3AEFF3B1B0DF5E8246D6DA2024B089A97D04
626F0465A99AF0972B0128B6F8B80BBECAB37B1993FAEAFEB7CA2A857D27E192
27DCF2D402541B71ACDFB0F75758364053D515A261F8558D652859C837DD373C
84B029DCBEB1611FC551B919FA63A00A496CC826FCF27E0A9DE1D7C371DEFB9D
52FBE5B6AA167830532B363F5F51908D0F8C43EEB70EB71E19E08AD84DB08AFB
9976E4B71F30463D1D996E3A4D33A7CAD3FD860BA35F68910E744EABF47F3F7B
7C3A05D040E7BC9BD9E1E73C134493717BBF13B5F3DDAB3F60AA99EEE08CC2B4
FC302D6A6E8F15B267D927F630A418732D8C4A437E551D11BD9A20E98B70227E
CE7F742395A582CC12B438C66E4224901F58621A5B25996DDA85903C7036ACE6
B5AE535AA56CF387EA0288F39EC5D08394C8E6C0C96AB32EAC30882F265A29E8
5F63807A5FD711DC1FBAE6A1CC606B5C65DDEDCB4FCFCD6797FC8BE49829F8FA
888CA4B7660A10764FC9AE70D4D8330D96A96975D579547C094965AFA050A292
FEBE85919646E4A2BAD1615A5E5B31A3175344E7E4A453D6D5EE5DC8420D1FD1
99D086DEFFCBFBE34CAE57E82000723FEAB1932E1552EF526D5834A118155D8C
D0EF472C74C5A302EC80A8ECCBC27B6CAED1D58E8825A5F38307E0FC3280C420
AD3113
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 63 /question put
dup 68 /D put
dup 72 /H put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2867256E
2BD91E1D7529CF105BB5BD75495BCD83A241FBE4530A2915D35E1E11CDE73BDA
5CE4CCA32019206272A5779E7F9FD1D4B4E45AABA6D342687796ADE2B3653D15
05321B628940B551492FC5C586D62F9281B079FCF8BAA9E224A292A71E010EDE
058F1F535AB6613A2EED30B401EBC545A95505D87C9C82D5BF231DD2727375F7
A7EF83EE83DC059A1C13C3EE213DA16E0B42550CF63871017948A5060D28EFBC
A7FC4CB835ADD367FC0AC65B8CB51E083091D4D7D5F03AB9D295E1697385FFC1
898DE4F8419234AC5EC7FAABA35EB2722A5B9722DD1E53B4D2A4464465303009
FE0D7E47DE34943DD1601A3064C127EEA2711604738EC8C743D49A0054877574
8AAA17181AF6390E39D7A631396BBC5E2F545185F87336D8818DEFEA71CF670D
EF37E189DFB5E1F1E4611425CBC813A6EB3AE7CA3CB857F1AA9566151D2051BE
26985D27E96D647FA2B494ECB4539A108F3215FE3DD1E36E94E44A8DDFBF5173
72A8E76D1D2D96057F21D272A7DD7979B664BAA9646C20AB59CF078A97D127D8
A701BB8EE870475CC0DEC45FB04674C4BC626A6D980D483765FD3CAC029C9289
288654C812AE7036FF22B91E5B0A181614567B15AF05124A1909A25C230E7CA8
21F729FE51F7A9F6DC0B88AFB00A9431B0D7B7C5A0A22CBD7628DF3AB6CC8E10
A1226689A9777479D1A7191ECD236F622CB4E33E2FF28CEB9E5934729363863A
A4DBF7D411560FEA0447D39AA2C127B24205D108B0D7852CAB200E264CB8FF7E
C4E5B0E0DF0A3DA4FA2BA37BD66451F0CC2DD4BDF4A36B8F7BDA1535C5D9A497
349871E4E9812CD205DA405301372D4B7A1D1536EC9FBDF2850B7B60B327FA5C
AF0C76FEA975ED462E68B7DC820E579A32377F06E67184379C392210915FF804
85B9656E32B69860F73DDFAAF662211179F29DAFC4CEAC67501AD8D507FEE9DC
36ED71E54AD3872C5FA27E0AD001429A679F2A61A791ED3F89BB5ABF041F7981
C573A0B8F302F054D13EC544BFD75C69144127A2A83F10FC5C104259EBC20ADB
698F36FEE2EE1067B65D97DC326DAE1FAE2B5A7187D3D1436FBD85EBBFDD7430
A001A28633734D17ABF0BDC3CD19E10A557AD2BDD334F0A2AE62AE92DA23BF47
FEB567BAEE1B84D557CE53948E9C72336D0C4441D08B91619FAE39BAD8F0B06F
D8795A370070CB90AC0FA41D9EA434CBA207B953FD74F2F7190E113FA410BA70
2AB88DBFA10EA84BACC4C4D393AC46C3A7ECB8528888B6D8F31483BF9023944E
DE91EE9D7F7189FD54EB1A95BA133D26B696A5691DBF8EA2803C857793155404
5601C4CF499541442EB182EA87A8B5F624E4903D03D623B858E6F1C0B4FC2529
36DDB8DB6D6981E04C97B25A3669EB57A5DD55E3D5FDE25D6C1189916C11B453
C33637C29EC96097E079E6383520A6AB3F111EC460E88C75C13DE516FC44D262
C33F9D91ABA73E71CAD294B0C93B99738D1918958397AFB80AC20B0452C4FC41
0476985605E866940E8668F6FEA910C11AB7E2D7E91AFFC8F4DA447D732EA0B8
5B51C22E4C6EAAC7A3BB839AE04560F10FE0EA641C32CBF5020F8D1653EBA999
8F18CB1DBDE3E55219E1C8EA0EF4088C298AA836F4B104E0B4617E38A3BB73F4
0FF435B09B34C9425AE036E30837682E5ECF964240E63A8C90D8953D3AE3AB9C
F1995A8BA4F2A9A78EB37348018AC1F0D0DF4BC59E17B434901506108BC67F15
37742D5F3B889F6C993552E7D5329B629B257B9DAABC2E8AF22D143BC4FF0519
1AC5FC8A070E189B5F89FC671AAA1FE6BF181B711171D4C2A25A01DF99DCAF35
7CE7942874E584A88215DD5B881243C85B173752F89E00B72890C8FE43237E5C
FAA79B6F7330B71B1427B266BB1C13A7728B3D42EAE523CFADC62FF994055ABC
58CE8CBC0A2AB0FB9F4C5AA9B818D0454AFEB6F4E7DF5DD45B36781FBEFC5500
C3C47DCC83395333842006B35A2CFA8FFE348FE5CF84A1C77A2668441D0E06A0
3B59CC885EF3DD39687BACDB8D45F023DD4F2DF36D313A60D7AA9107CCBE3637
7CB747AC1180D1D92F2F0C69F1FEA4D9B98E6B5B0812B0D392037B1465767046
2BBA1E870AEF97A6C28B792639069944AB8AAB28DB19D7AF57D2071E9C9C186B
C6531447C55307DD48C6FB524B23F62076CCCF23479F5CD25D039CBD35FB0B2F
FBB6C5984A67A221A135B69E1844031696735FA87E5A2E8680D1588B168DD30E
5682BDE9B6265F84C527F4354B48BC637D721FB9C9D0C0C92562743662BF9078
60E5CE4FD0E91D2156A15E98FCFB3CFCE5169A62D89B5DAFAFFEE305A0DF0FB2
1D08206F6060EBDBC946453B705597FE5905190FC76445718FBEE8CB7837F6DF
D09ACD6282CA53E7B1894B5C95371D3135B4DC590AA598C8B99134EF446BA2C4
7598C819E8364A88A24A53E3A148B2C8E11E83A12EF5420C85DC10591878FD08
F03509655B55113651F16C491EA9145D86A3A2D1C06CA00376807A24BF6F15C9
F26E7D576A18681D82B1D526BBD8FCFAA4D51734ED4BEEEBF874CAEACDA7A315
E1BB454FCCF78985900DEB7BD378F855AC014D4FD0E0C6A9AD651210E047371C
5ECCB0EE5D87708842CBE8DDB8535D7F4469E83471879183778B0386CC5701D5
40CC47160D7A882B72DB800F7200E96B659358E3E09A7B130C2E64E52D02FA16
7271F5E48C2F3AC9168E5AD767B96F9DBD7E317CABDFC7256C73D82759C5E727
6A95044A4C86D20E6238DD1E68FEE24E9703A600144D1D4BEC3994CBC00F874F
2C96A1349D5D6DD655EF29E5561752E898B9FB11222F897428F83FCDC5719B00
50A12BF256860ACE4F1C390DD6B3DBB07B7D372DD1E66A0672D024F46B804679
DF43E102A14A2E3FFBA3962685C2DD9D433539A62D6540E2201828D5410369E1
1600E96AE27D1C44CAD643E6A500B0FD20DEC7CA293440C0BDEB6EC0A4A86653
0D6FCD8ED360D1EF465AE2FA498A75BF9D81E6A9CBEFE0D2F2E6C620524C2F60
9341D68BE1FBB9D9F02BBBC17EEA6A28423FEC8795D1088E508955ED06491955
AE77A2698FFF19B4FDA213D4B5719794F9125571A4127F22F0D0D0E4BEBEC315
BDFE6BE9F6BD0A0FF747183D4D7A2C21556722A785A16651B2ED398CC607475A
F7FBA3A6E2AB7FC883D41B9C862CCA3B84D36D9738E85DA20446170E02B0B082
AC34A43D73B8504AEACC85465FC8C076379B8C7C0915C713DCA2257E48B48AEE
B1086E6AEAB4E11DB2B07E9C5942FA6D5EB50C3204C5252BE88ED6EA8CEA8DF4
23DF36E9522A0E95199F0F36630F3A73F934A452CAEFB269B27B2C23E1F3A584
AEF9429EBE1FF5E54FD0070844C5638676A0F8C6909C58632CADF5BC7C415E3D
F3E35452088FA62933BFD1AF9CFAAF75C099C79EA7415B1194C3FFF380C60EBF
F5BA00CA205CD71D6081E148B14C84F576CBC0B6C5EDF6F0FE0B62AC892D8309
4E89B7B41156FBF3CCEB5C4864A2269163CCD814A5F1F8239EF0023E39A84C3D
A2A2B938F70281FDDFF489CC96CD177D48B6CB8B2D8CDF323C30CC2FD77CD93D
492BE1AC3E4E31A4AA99C9871852C709E225668D8F1C85F8755F3FE167FF2BF8
A106FB5083FE6BC216437B7E3DEEB81F338F5216744ADBA5D6DAAB1F62ADECC8
E1465C61A5941F7410DD0F5595A87270B150E244C9406C0B444FDF2307DA69BB
0D6767E6F2A8C6E5472323D63EA1FD6614852301B130047B2AAF7D0D3417B595
4117FA30E93FD834CF211B80241283C19177DF5A29C3122865FB272BCACB157A
492F82664F8DE1F300C05F753DCBAFCAFAC37589A5909E362224B70E75709D50
A90A98412242975AF1BCD5C4D5C00A37E01B68DB0099F9595C53B69B9F0B9F93
B52000FA68FBAF948163B78B23F59EA0B9087EE8903549B19D7E2B70499C191F
3BAC3B30D390A94BCE6F0A1312B8EC435235A6909FA05D522995F3D3D2CB4062
A03DA3724DA8CA5D925504F960CA574F695EFB02B9AEF9BCD0C9209A267FB2E2
013F482D0913793B724F27471C5E98781BDE4C461D257491D5853474ACBA13B9
FC6CF0CDF0AD3C87EA3E21DDA5312783DC7FBC06277F87489051BEEBA61B568F
D752CAE0B063DDF35636762986858EAA6913F5E180E666978C9301B6CCFDA0E5
F2C0AD0DA6790F8D02E2EB1D07FC37598E01780BADD537BCD17718B12917D06B
38FE7C73D87931FDA9705D0524485BC13AC16B0C96A9DF807B56E7DD4A4C9264
5C2696DE45DFA6015E002E0813AC26DD80DEF4788DB6F4C9C3713C7A8AE927BC
EE30EC2CC0DCA7AB1483EC75CC0162E767F785B22DE8406BC28C94E25AC24ADD
80D8B3B88C188D2F14F6E74DC5B2C63AD7927A424C1C246221EB66B50B0798BA
4C239E2E7278A6135979DCC90C951F1280F2E1363E2A38904DDA06E362A8E835
BF74711CF0BE66F01FF17CACD18627E1A7522B3CA1CBA020BB796607E718D673
D115352B540924099E18F381B7A549F1295A854D42BECA463A87A6DCF89B2A3F
55D25EEB509097640976C7BCAEF60D739725D41220F88D7302161833264E502B
0B87F10631EBA7709745E7CF67F6CD00F6AC12500F2A22F937DFC39ACC0B0BBD
F65C8DF4C8A618975B1AC4F12594A41D6AEFA382AB4A57FDCE77C9A60972EEAB
59374CF0C8866C8D41D03B455EBDFDD671E763F13A4084613E926D99CBFAEEE5
E535410777A0EA6D87A1461102BF35A9C48F7CF67DCED1EA72CF822A148FD2E1
5B2D30ECC35AD8D03CC28AE5F7D6B0A3100B9F88AC1B21510F17D2964651BB66
72791DD4B31B3BE4A6CD078D730776D8E2D6FD3BFCFB12BCF4888C6727AF39CD
A1375A18418AF68C4E8B4040E7EAA045C1AA34A6AB5831C1A1896E88092D098C
A643E95350B8D919D1C310F9D4ADB489456A7936DFF062D7F7C3980756F8D34D
E2711036993F5DE9A293927D1F5DF2EB87F19F706B7FC6ED2239FEA0C531451B
5BC19591DED7FC8C439BB12B1B0F0C6E0E266350FD6AE7091C56AEBDE651834C
922E9C3F4951AFC616D11A5E26F269C90FC9A1EA2C2A1044BBBD88ED04E89941
EF5A123EBB9895491221BBBCC8F0C655A11085A124FD305291A94BC94EE64D18
5980B0A213FA819BECA0C36DE092B62866595B5D026BE23D9920E125EE8C1026
D56D605CE084C547D4A4531606E329B92B72ADF4A50167697AD95FF60BFFF503
193507181D9D652DC9DC54072D0B30A39DA54C7A5F3D8DA902FA26245B02174A
7344B15873798082225F1219C64D14B186081B6BF799A50476ECFD37CD3CEEC2
F8D5766D1EADC8A7E66B58FBE7E4DA66DB602A67F8490B612F53ED2E018AB58C
81933CC7E22E3521220F338C1AE4B5E971CA807B4FD581B8199B98732C678A8B
C7C8F9AA78796143FE566E028DA60C755BDF8AE5DB6697D35F0020E2CC209FB8
B3BB7932914EC6F53DC786400DCE5A55F88897FDEFE3CF8B963138B609B895D5
DF11A448D5CD0C1F424914A71849459B7E0053384A6C9A2EDDCC52D01D2F113E
5274B53D130AF4FC27008F2A625099B320613A9341F3E30F7E6A1388663A427B
1E4F09AC6F908EDE9DE25F8C51ED5F02D5F72FD4CEFD96F9101BC8DFF34B5B98
AAA7D85784ED8CBBB28B771C92C484BEABC7B2EF318A72588075976E5C96575F
6AB6B31AEB07D4095546F800A1986EAA3D55C119F997FE4B4ABB2AFE4BE00C96
015710AA8B35DCDD1490553A27060E641A88E7C81F0AA57F7A7B497D69076AF8
D624922341565AC241168D85CC52047310BE458ACBA8FC6CBE248681CE0F0EC7
6AA5D350D16CF1B37496FD23BAACC5D7C5CCFC4F490671D2BB96FF54675562A3
DC9897CF10342D24F58A5D3F0A0A877968D76539E4273836829DDBE0BF65DE65
0B63490E0F501A6F6767358C13291E2C020F6638C8964DA6A0838E93C79A2145
45ACE2889D165275291F75326D0B92F12E2273BD96DB25B4EFD25F672F649AF6
01943A1EED1CD925AA669005A5BE078636C0B91FFE4220E6BCDA8DED3037B508
EE814AB02BEA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 55 /seven put
dup 67 /C put
dup 76 /L put
dup 79 /O put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD8AB8FF325A
62FC5DD3D91489C6571ABED041CC780CB6241753491E8ED99CE05D849D27734D
705B556C1BA9394AD8E73330971B2B071E890359BCCEF830044969471431BD61
A150893A6E4DF6B78DC4B6E73FA7A3E4327434A0D66281F5976E6F58BC2F7013
ED318D38A606EFE49E9D1DA564BB271E8B02A62962FD7834FC82825CDF7E09F4
8A56ABB84794DAB28A32646124436AF4063EC071F152E0941BCA413B6264976C
DA6B8ED7E0061DFEAECDD195A9F0C4246BCB6D407662316D67AC8788F91C9F8A
F80257C594F3D8589410FEAB8AD0BDF2601EC4E0F8B40A405001F93EF784516D
C8F7E97C75C46289096D33D9EA2212B170F3536C570D7465549A9B859C12799E
A977FDAB83F3CD89073CF20D65675A7E881A3A7F38203076C58637A9E338AC7A
807DC19772CFFF4E844438F09076C540BE8FA74720DCA5A5F5FBECA3AF7CA7D1
8CDA7FD34CDF7269DA96CE97A5AD14EA375D6BF6F6B69FCD32052BEF0D9F56AB
D938768F9491195622F6459FA5CF0606610F54FCD2A92C13418E58583DE21E51
AB3CD43F4AA28459713698D48FDCC6B35308488A856F8121B6310DA6EC125948
61A335E59D74749DB25EAC7FEBD4F4A959FC1FB2ED07136E2F6F4619BF139E93
CA38E773C65EF9E5AFB965B5748C4381B2293DFBCD8FAE0CB467E376F06B4AC7
FE0A4A9A4B579DD0407D8D9F2E0A7CC942D41E11BA1F9B0221C11DA650CCE09A
A62FB8F2F29AFCFE2C3DE4629DAD1BE1A2B922D8258696E961074F7AF23B173A
2736D4989A6DF028E8F97625DFE9EBB4EAC7F87E5FDBFE2E0578F1261A97CD7A
E6CB78CFF159FF215877F97B904134BD31649FB6673B7EF8E053DA39F5575105
FFFC8CF6B84317B3DAF88E0E647961530754A262873EA462BB6C187648A3CDDF
A2991AFBB2FF92E3EB9F61AA8B225D32AC236FABB6885229D44A9BD99AA99E10
89C8EA758F4F698B7214B64B9D2A5920BF5ED5C9B29D54B0F0C90163BEFFAF10
500A5B54A449E69F556CF16F9B9C8C7AA4AF500BB8AE588D8EE8A2E53CE9961A
AF3389F69FE7F2EB2DEAA289C20A7CDE96F22D31DDFCEBDE29E465CFD651C39B
40745E243F313C19824E6EBC98A718FF78AF79909017011D1EB024F19BACD9F7
24EBE1DB0A2378EEB04B1F82EF298DBA00587FBB818B60906BC5CE989FEDC8D2
767FFF01ECE7AABAC0F56F0C5BE263ED413CEE258B78AE19B7A5E0C59C1954F5
CC00D00077F0E19450CF9AAC3A6E8CD5C608F478E89958DA8EA0348E05F08D27
A503B2928F7BA55736C92C7DF10CDFE131592A1214F01B8072EC33C8785C7A9F
0E5CC34DED00E183EFD43894E48D535FE813BB1C09B758A923890A3369D6CBC3
306AD9A3AE532A0CF31C83F98A3B9620C08F8E90545C5FAEC91C1A91EF594981
CEA6F0734CD486AABC4D617A5D12514F89373A31B7A87F4C2BB48AD874497D9F
42794C117735A02EF49C0D4884BC8B0FA9021DA57A10F5DF85826094C4B2DFF9
CFB0585818096C4F31FDEDF5913DD1BB96758AAE0DB6E53F1C47140CFA46F7EC
5B3B2E9F97E435D359D6F7983419087E6EC0A7311FECDB869521F324F4BA61F9
2806F1B09A1D1E2FF9AF701F6FB351385F1EEC2843DE2A10D6AC3929A7174598
FC6E02A029DF60EF1AA08FBE1DD9EE1193143C724E6B3260071F1548D0C96D5E
4F587DE2C8117BC4C1C61AFE1C0DDA9758832B88DBA1AB468D16CBA1B28896CC
CA9C80DBDAF2F5B587C06ADA6BA5A4C034EC68F057243A3B274E38069782E50A
8CCE2DCB9765D5FEB766BE28AA7C816E4BCD1977D7A7B4E377FB7DFC4804A252
DD9A6099424255BBF8A8F61DC61B5251C064AC8CEFBA5938D3C8A9479369E9F9
BA6F36811BF51AE5A1387782610E322D7704A09B62B2790D92090F7C20C1D96A
DE82FB7563F16CE99DEE4C4488F8A925B312E11C6B9C5737AEDD006F7F564C9B
B79BB38910D37702F3F7C024A0DF5A0849C1679F72DA63A57F7CDF8191F30D54
773FE320E951DC9B54879487C907582E58ABAA80F3FDA458722D9EEA19F7A807
92D6EBA9B9AFEAA9F76F2C775966FD498CB124A4AA014BDE2781BFB26B1F9E21
233E56528BE9E51F7FE0FDAE17021F3867AB032E411828D9BD7BC73DFF8A4DBF
C1BE6DE6A99C333BCED251180694A4DFDDFB605D25A36BBDC3C5781A690402C9
48EDC54CEE55A304CB2105F65E306D65CD3F98E9083B13D1B2980EC018AAB7E3
AA7A60552017CEE12C8A38ACA3C4CF8FF4E2C99B7AE81773BD69A248656313B5
BE42C119A0022CBFE1694817036FD0DFB68112957D48ECAE0C26C7823DEF7A3C
C9A768D7DFC9760CA92CD95722D906383377F3370FC7B81AD987B4285C63A200
CD8B8565AEE1082AC8DCB5E0093022282DECE535562EA75FFF1E61EBD2CB26F3
26935D97FCFF3593C3B3EC8E5263499E138EE3CF1BBF6BDCF82E798CDD14BD76
8E1FEDB325CF718C93D4BADC3E07AEE9F5FE692AC258E1EB7F14CBB65EFFC879
5AD3628C485A4D1D5CF3D71295914A4B7950A07FE5F272780E903E0450879E88
282BC0FE74095DC75C49A6CF21BDE727302562BDD06A402AD1362440F54BED35
90FA0B9A3994A02F4B726BB00CD30CDD64843446806F461A3454C4BC4954709C
56CD22E0C03F866E802BD19D64E0FA9193A3CE1486267F480CAF96988EEBF2B5
55A5B3909DDFEC48E0FC18DCCB48A13096B891869CA4732C37727F73C37FCF35
41107DA7CDF38067E9317FDFBC9F10C9F307FA27C50D5F474CF0E78B03DC6DE9
FBC9D3485E00006AD2BDEC73C27A36508046211A74E987CD3EC939639C31D0E9
C8C17A453BB48DC446CA69BF3BC75E36E736B2809B3A1ADA33BEC4BBE5EF451E
C45D0AA53BCB1953229014DC2F6C2471B03858BBA4ACA95A7854194799C1DAE6
3D0B9D2F45C686C01AA57F8D41E4252ECB2DA9AA7A70EEEC7674104C30B00082
2DB92EACC17FAE266C2CACC2EB5FA0DFB6B95BCC79F937D0F10643B669A63AA3
D828C36AF7141AFD549582FAC290757A07FE8457F18A166C84AA00BEE416D30C
46133C61147D80BC57169519F4279CDDF543058AD11318435D4D02C94025F051
59A8EC8E51148631569B43774AA0ADA537D5DD19E6F1B4A581F11A9C56A4A820
26F09EECF9742A4B04C93E6FC049B2DC6DE0F5796EA623D054248926C4D39449
DF0709A4B703681807DEB1FB8BDAC4585CA0802265BC69C6BA0E6DCDD8C874D5
999ACA147B31E5D49386594032E3A1A6FC345B1AE6CB007BC8F8592B73626E23
97D3CD49A099FFBE44645041548F96ED2AE323A820A4A4460F653F089BD4613E
743E1D4FA41159EB1A4C8125F5FE4EDCDE7426211414DFA84EE46746BF6B7FB7
5DD6C0A5DBA31211ACF06EEBB566592F740ECA2C77469D649E9B163A98FAE263
22236550D61E5CF3B9A839CCA6ED601CCB6718ED8587F49434B10601670DD4CB
98A171141E7A1595EFBD2C51F20EB75CB50056505C72668D38511AD4018E0E0B
72862FF87CDA74241F99CACC10D756A12033F42FA4C8F8DF1AAFB02A574EED1C
23C4060064741094A40AA61C15F4228A4CA7BA12B9AD47ECD4D9332C93EF3D4F
17C0520AAF514D8C045A6608966AACE12960E51D8640045F0A8E44A561A0027F
E5F8AA398D993D3638E9537DB65C2B17960C43F00E02A283A5E15A06CF1B18DF
6DB0E93F8AB5F8287CC22D0D76F3300DA22DB3694BADFB344A7162B032B7F4A0
40F22249C3E5340C12669162BD507826DBE2DC2F00F1BB41EA901BA259F21BBA
BE217B913320F692EE56D449C563BCF2431F161148D3FD9975A656F3275185C1
582D1A95A5A555260177092348F7B383F1251B6F953706F8DA6FED12ED6DB34E
B2D6BBBE5AFC5793FDBEA44E18CDC4AEA76E324E4BA282AD66ADF299C8C90C85
362B140072AF2AC2976C0E05D0C3D6468F9B5184D14F786287C0807A4591461A
D88B147F99E1309C5CC6D372FAAA50B7428A1F8BF3E9D5085F8FA6DF1D45E158
E59D7FCDAABCDCA106F9F2155BD657F7F9B56D3AAD98F843324CFA6FF2A5D373
6B911F414BA41E1B5690EAD4412EECC7B5E92735D739ABAB44357DDC4A5A6747
C150C273ADEF425BC6132F56DC1147274DF72A991081482EFA5EFAB9920D8EED
183E9085FB69E4A4EDC7755656E708FE307F4D09CA3BD42326567E83AEFAE384
8167FCCA974478B3DD0EDB2E1733234D188FF17256ECB624C2CAC48C1DED17EB
B002E092E9553D6C28
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 80 /P put
dup 85 /U put
dup 87 /W put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B41EB1D90E43
A8FD2EBD81EB1980071C0B0A0C92CC7A2EB2809DC3B2F7E24F724ABE96068F86
86368C832CC9F099822312A84F318860BBB290A0FCACB0100362106F74855C20
A088AB0AE9480BF151481FDB8CC321D2E90A49EB015436B8906814D7AAD89334
87C68A7C9D20D61E9C20E3C1BC54276E6B936648320A9CF90EB26BDE6CE5537C
AEAC71B7F99DDCC9026BEAA11280404C2D738EFF4752E44CF032ABDF41C11CE8
C67EC198CEE5444BEA74243FE538F6AFA34BFBF36F276EA6376FA968A4B1632F
A7FF4F96ACD7A99391043C6D3461CA09D5DFD219ED2A85301524A9EDF6310351
2D2C6CFEA6F701C0EE44A84617E489D6586D1124DBDB454D49B2DA40B48EDADF
16AF04205AEB76B60DC5CAC9F48A79C39CD9B5098568C396C0B36C6CA76FAA00
8DCD3E448F8BD484CC05FED8259ACC11609D1B371A61354AD6A04B0E62CF86B4
3BF8094DF937818FA1C503699A291AC297D70E669C295CADB7811209BD146A53
61630AE7765DE1592EFEA602602BEBA8DAC1EF207A7388CB9C10ABEF1D0D9FC8
2F27E2441223F6AB139FC3C46F83C13D64AEF569473C4B649866E5ACAFC3D2E3
AA3D7FF4C5E29077F003A22EC1EC83B7A8BC95BC002EF6502DE3E209EB592C18
20DE6A807D05666269B32274D73AFCEE8E70F5F8C08FFCB5A439DFFB2FB9E88A
1AB4889016127BA6EF04299A3056E2D0951231FA0738366BB9145C70192CAFC6
52A2906FAA2B1E34AF084070F108EDC6B0B318B446A94158BC03BF05DFF57495
85EC3169DCBE0F3BB4953388E9771CC377109F038A718E2545DC30F527FFA37B
2CBB78FDB538BF7D8EFE81E641860A224F2284BED3481B8982F8388B3D9CEE50
4FC38026C7C7E88F1D07CC21414B5EAC72E557208BFD69E91F5938812277473D
4EF3705A534E934E4C55CF4BAAC592FEF501E65C90094C6A1644C02607951C66
1B646F15A5B27D281BDB8284427BDCD18B55C076EC42D6A88F5624C4E2EB28AC
36CD58DD016B7A3A530DACEA1BFDACB939CF31135D57166559CBEDA6AC075CAF
799621C394AA5F06E9A9F3A7ED4476E29E44FF355A28109091BEFC13CDAE4CF1
64B964799588054252D7B3D94EE2D7054D6C8C896807AC1CBD25888C9D1FB0FF
64E5F33D3B931A7C242620E059C67B1566DFB96B805BC785A03A615BDE014261
112A62B8316AD57838EC57E7F12B974BD23150A06D32E5F25FAB63B99D3255BB
0BE4A115FF219935A98A167CC9DA50C54C4930FC7992763B84101D5D9AAE4244
AB2050C175E3BDDD3F1074A49B6C3B0476AF425B0155E4DEAFBD410016C5016B
1AFA46DFF1C48091A095A5E023ADB05DC3692D77E1B802CB782571D2BF4C8EB9
A508A0ADD2E306B5E4F599558C5C6DF1A8C8EA4AA55DE94277D037C422E275C2
49A8B9F9975D123550ECE27AB529B1C638666082A42577307DC6F31163F081F5
FD062947B43A31E9C204A6CACFB0A90AB1F1A0B1C3DD48BD31B98B700196088F
0C1CC9F3315FD55D7DACA2D5BF6C303C106C955061DA071D72F87ACB5B3DD0CD
EAA31922650E5F722C6F69EDCAF4361DCF9139B8FE297CDF679C9E025F6F3284
AF7FE452067A97256613F1EB9DE7D0B5D48667852A15F4986AA6C45D27B120F8
D186DE4928F4A61CEB5346E1460E027F5FFE79CA44CDFCFC33B4C304CD734877
BF52114E02C8B732A14DF46D32C4C5A113CD4BACABA4B9646EE03E9A88171DAD
1917DA3F6630E5F2CFEA80EBDFF6FB175491776BF9A858222803434D94D3AC4F
407C685033278CA57F6EB5805BAC42DC051B1269C70DA9655FD84CD95FA8CAA2
C71870E59EE6BE1B865743C05753586B0D5B26510530B8782E862FF59431868F
033FB48085C65278872960FB19A41AAFDCCF7F95F8C23A5FAF99F16DDE256026
6CEEA8E32DC149450F5C4F9D170DA353300444C8407B200A7C47C520B0A2DC9A
379FA9F243ACF3BD84C0D4A13FDB4C3C35D50BEF10FD8F478986653C7CC6E16A
AA9B63947F226FB5EFCA561FFBC553992250782EB477C8A0124F42A42E12D659
D8890370D15F0948527E705949F749D231E0431F4C5A1D40D4E0EDC2E0D6AB4B
C51E16CC765785AF16173A52F1D5B168F81F6758A64442BFF67371DFDA4F6118
3ED9E426FD9722B3A69F6BAF64FAF4475ED658B01935A4B5A51CAA48534FD3ED
F20971220F109AE35A0EA577F6E5849D249B9E99A6113F6AA4C460949CB7C64F
99A7FCF980FE2D832F9A8A04C5AB360A26459FF4641279C832AA979D561826C5
B565F906E72BCDD766470D9E554E62459B5E482009C127430BC34905E67AA708
255C839F29620CB76AE589E3832FEDCCD1B930C7BA235484B4978A5B816A8540
B563579FD075323EEFFA8E8387E1431F89BB211C02040FA7D306840FCBE0EF5E
8564179210916B9648A76F485F27B7DE0E6841AC8865AEF9275A70DA8507CAE8
0B0665A01D7330090187FF328D6053AC3224E9B731FFAA71315DA032ABBA1DF8
6E8A788473ECFFA2EBD834B169061A5A65B330D8483477BDD2EB63548B425B42
DB4E8FA451D06828E3374EF159535E61E33341F4F44FBE3D33F3C99234587645
EFE6D6853C597BBEE8A7BC9E2C9D493E591B8EFE0FA47AD313083D41D5470B88
39F4C834681D2D375AEE8AB7A13B53BA9DD51B52D496EFE26E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (chaul_hw1_writeup.dvi)
@start /Fa 134[40 3[45 28 34 35 38 42 42 47 1[21 38 1[25
42 2[38 42 38 38 42 49[42 47[{}19 83.022 /CMTI10 rf /Fb
133[37 44 44 60 44 46 32 33 33 44 46 42 46 69 23 44 25
23 46 42 25 37 46 37 46 42 4[42 4[85 2[60 46 1[65 1[65
62 76 52 2[30 2[54 2[60 1[62 17[42 23 28 23 4[23 4[42
21[46 12[{}46 83.022 /CMR10 rf /Fc 134[71 1[97 1[75 52
53 55 1[75 67 75 112 37 71 1[37 75 67 41 61 75 60 75
65 9[139 2[94 11[105 3[103 4[64 16[37 1[37 44[{}28 119.552
/CMBX12 rf /Fd 136[70 1[54 38 1[38 2[49 54 5[54 2[43
1[43 54 49 17[76 2[61 8[70 11[49 2[49 1[49 49 49 3[27
44[{}20 99.6264 /CMR12 rf /Fe 139[51 1[51 1[73 66 4[40
36 3[58 1[58 11[137 1[99 4[90 29[66 50[{}12 143.462 /CMR17
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title () /Subject () /Creator (LaTeX with hyperref package) /Author () /Keywords () /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 -328 a
SDict begin H.S end
 0 -328 a 0 TeXcolorgray 0 TeXcolorgray 0 -328
a
SDict begin H.R end
 0 -328 a 0 -328 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 0 -328 a Black 0 TeXcolorgray 0 -120
a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseOutlines /DOCVIEW pdfmark end
 0 -120 a 0 -120 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 0 -120 a 0 -120 a
SDict begin H.S end
 0 -120 a 0 -120
a
SDict begin 12 H.A end
 0 -120 a 0 -120 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 0 -120 a 0 TeXcolorgray 0 TeXcolorgray
1394 349 a Fe(Pro)7 b(ject)44 b(2)f(W)-11 b(rite)43 b(Up)1620
709 y Fd(La)m(wrence)34 b(Chau)1586 1025 y(Octob)s(er)e(27,)g(2014)p
0 1255 3900 4 v 0 1583 a Fc(What)45 b(do)g(y)l(ou)g(think)g(the)g(main)
h(p)t(oin)l(t)f(of)g(this)g(assignmen)l(t)i(is?)0 1689
y
SDict begin H.S end
 0 1689 a 0 1689 a
SDict begin 12 H.A end
 0 1689 a 0 1689 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 0 1689 a 196 x
Fb(I)27 b(think)h(the)f(main)g(p)r(oin)n(t)g(of)g(these)h(assignmen)n
(ts)d(so)i(far)f(is)h(to)g(help)h(us)f(con)n(tin)n(ue)f(get)h(more)f
(and)h(comfortable)f(with)i(the)0 1985 y(Lin)n(ux)i(k)n(ernel)f(source)
f(co)r(de.)44 b(This)30 b(includes)g(getting)g(familiar)f(with)h(the)h
(lo)r(cation)e(and)h(con)n(ten)n(t)f(of)h(sp)r(eci\014c)g(\014les,)g
(lik)n(e)0 2084 y(the)h(I/O)f(sc)n(heduler)g(in)h(this)g(case.)46
b(This)31 b(w)n(as)f(not)g(something)h(w)n(e)f(could)h(ha)n(v)n(e)e
(easily)h(jump)r(ed)i(in)n(to)f(without)g(reading)0 2184
y(the)k(b)r(o)r(ok)f(and)g(understanding)f(ho)n(w)h(sc)n(hedulers)f(b)r
(eha)n(v)n(e.)57 b(The)34 b(frustration)f(of)i(ha)n(ving)e(to)h
(recompile)g(suc)n(h)g(a)g(large)0 2284 y(image)24 b(o)n(v)n(er)f(and)i
(o)n(v)n(er)e(again,)i(no)f(matter)h(ho)n(w)g(small)f(the)i(c)n(hange)d
(ma)n(y)i(b)r(e,)h(help)r(ed)f(us)g(dev)n(elop)f(a)h(\014rm)g
(understanding)0 2383 y(b)r(ehind)j(the)g(w)n(orkings)e(of)i(the)g(sc)n
(heduler.)0 2778 y Fc(Ho)l(w)50 b(did)f(y)l(ou)g(p)t(ersonally)h
(approac)l(h)g(the)f(problem?)73 b(Design)50 b(decisions,)0
2927 y(algorithm,)d(etc.)0 3033 y
SDict begin H.S end
 0 3033 a 0 3033 a
SDict begin 12 H.A end
 0
3033 a 0 3033 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 0 3033 a 196 x Fb(In)25 b(order)f(to)h(approac)n(h)e
(this)j(problem,)f(w)n(e)g(had)g(to)g(\014rst)g(understand)g(the)g(No)r
(op)g(sc)n(heduler,)g(Shortest)g(Seek)g(Time)g(First)0
3329 y(sc)n(hedulers,)j(and)h(ho)n(w)g(they)g(prioritize)f(I/O)h
(requests.)40 b(F)-7 b(rom)29 b(a)g(bit)g(of)g(reading,)g(I)g(learned)f
(that)i(the)f(No)r(op)g(sc)n(heduler)0 3428 y(tak)n(es)d(the)h(next)g
(request)f(from)h(the)g(b)r(eginning)g(of)g(the)g(queue)g(and)g
(dispatc)n(hes)f(it,)h(and)g(app)r(ends)g(requests)f(to)h(the)g(bac)n
(k)0 3528 y(of)34 b(the)h(queue.)57 b(It)34 b(w)n(orks)f(almost)g(lik)n
(e)h(a)g(FIF)n(O.)g(Shortest)g(Seek)g(Time)g(First)g(tak)n(es)g(the)g
(p)r(osition)g(of)g(the)h(head,)h(the)0 3628 y(p)r(osition)27
b(of)h(the)g(request,)f(and)g(the)h(direction)g(of)f(the)h(head)f(in)h
(order)f(to)g(\014nd)h(the)g(closest)f(\014le)h(to)f(dispatc)n(h)0
3847 y(I)i(p)r(ersonally)f(\014rst)h(searc)n(hed)f(for)g(and)h(researc)
n(hed)e(the)j(concept)f(of)g(a)g("Shortest)f(Seek)h(Time)g(First\\)g
(sc)n(heduler.)41 b(After)0 3947 y(I)33 b(got)g(a)g(basic)f
(understanding)h(that)g(it)h(is)f(essen)n(tially)f(a)h(FIF)n(O)f
(algorithm)g(prioritizing)g(I/O)h(request)f(closest)h(to)g(the)0
4046 y(read)d(write)h(head.)47 b(After)31 b(lo)r(oking)f(at)h(the)h
(curren)n(t)e(sc)n(hedulers)g(installed)h(on)f(the)i(computer)e(with)i
(the)f(command)g Fa(c)l(at)0 4146 y(/sys/blo)l(ck/queue/sche)l(duler)45
b Fb(I)33 b(noticed)g(that)g(the)g(No)r(op)g(sc)n(heduler)f(w)n(as)g
(installed)g(b)n(y)h(default.)53 b(I)33 b(then)g(copied)g(the)0
4246 y(No)r(op)28 b(sc)n(heduler)g(and)g(adjusted)h(the)g(algorithm)e
(to)i(add)f(a)g(descending)h(prioritisation.)38 b(Most)28
b(of)g(the)h(structures)f(used)0 4345 y(w)n(ere)f(already)f(de\014ned)i
(in)g(the)g(No)r(op)f(Sc)n(heduler)g(so)g(transitioning)g(w)n(as)f
(fairly)h(simple.)0 4445 y(My)g(team)g(and)h(I)f(devised)g(a)g
(solution)f(that)i(will)f(go)g(through)f(the)i(en)n(tire)f(queue)g(and)
g(\014nd)h(whic)n(h)f(I/O)f(request)h(has)g(the)0 4545
y(shortest)g(seek)g(time.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 -328 a
SDict begin H.S end
 0 -328 a 0 TeXcolorgray 0 TeXcolorgray 0 -328
a
SDict begin H.R end
 0 -328 a 0 -328 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 0 -328 a 0 TeXcolorgray 291 x Fc(Ho)l(w)42
b(did)g(y)l(ou)g(ensure)f(y)l(our)h(solution)h(w)l(as)f(correct?)59
b(T)-11 b(esting)42 b(details,)i(for)0 112 y(instance.)0
195 y
SDict begin H.S end
 0 195 a 0 195 a
SDict begin 12 H.A end
 0 195 a 0 195 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.3) cvn H.B /DEST pdfmark end
 0 195 a 219 x Fb(W)-7
b(e)25 b(tested)g(our)f(solution)g(b)n(y)h(taking)f(adv)-5
b(an)n(tage)23 b(of)i(the)g Fa(printk)34 b Fb(function)26
b(to)e(prin)n(t)h(debugging)f(information.)35 b(With)26
b(the)0 514 y(debugging)h(prin)n(t)h(statemen)n(ts)f(in)i(place)e(w)n
(e)h(copied)f(a)h(folder)f(with)i(m)n(ultiple)f(\014les)g(in)n(to)g(a)f
(new)h(lo)r(cation)f(and)h(analyzed)0 614 y(the)g(output)g(via)f
(serial.)0 1008 y Fc(What)45 b(did)g(y)l(ou)g(learn?)0
1114 y
SDict begin H.S end
 0 1114 a 0 1114 a
SDict begin 12 H.A end
 0 1114 a 0 1114 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.4) cvn H.B /DEST pdfmark end
 0 1114 a 196
x Fb(I)32 b(learned)f(ho)n(w)g(to)h(mak)n(e)f(an)h(I/O)f(sc)n(heduler)g
(whic)n(h)h(I)g(though)n(t)g(w)n(ould)f(ha)n(v)n(e)g(b)r(een)h(m)n(uc)n
(h)g(more)f(complicated.)50 b(I)32 b(did)0 1410 y(ho)n(w)n(ev)n(er)c
(tak)n(e)g(a)i(lo)r(ok)f(at)g(the)h(CF)n(Q)f(sc)n(heduler)g(and)g
(notice)h(that)g(it)g(is)f(m)n(uc)n(h)h(more)f(complex)g(than)h(the)g
(simple)f(FIF)n(O)0 1509 y(based)h(algorithms)g(I)h(to)r(ok)f(adv)-5
b(an)n(tage)29 b(of.)47 b(I)31 b(also)f(learned)g(ho)n(w)g(to)h(mak)n
(e)f(a)g(c)n(hanges)g(to)h(source)e(co)r(de)i(and)g(mak)n(e)f(the)0
1609 y(Mak)n(e\014le)d(only)g(re-compile)f(m)n(y)i(c)n(hanges)e(b)n(y)h
(deleting)h(the)g('.o')f(\014le.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
